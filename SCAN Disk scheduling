#include <stdio.h>
#include <stdlib.h>

int compare(const void* a, const void* b) {
    return (*(int*)a - *(int*)b);
}

int main() {
    int n, head, direction, size;
    printf("Enter number of requests: ");
    scanf("%d", &n);

    int request[n + 1];
    printf("Enter request sequence: ");
    for (int i = 0; i < n; i++)
        scanf("%d", &request[i]);

    printf("Enter initial head position: ");
    scanf("%d", &head);

    printf("Enter disk size: ");
    scanf("%d", &size);

    printf("Enter direction (1=Right/Up, 0=Left/Down): ");
    scanf("%d", &direction);

    request[n] = head;
    n++;
    qsort(request, n, sizeof(int), compare);

    int pos;
    for (int i = 0; i < n; i++) {
        if (request[i] == head) {
            pos = i;
            break;
        }
    }

    int total = 0;
    printf("Service Order: ");

    if (direction == 1) {
        for (int i = pos; i < n; i++) {
            printf("%d ", request[i]);
            if (i > pos)
                total += abs(request[i] - request[i - 1]);
        }
        total += abs(size - 1 - request[n - 1]);
        for (int i = pos - 1; i >= 0; i--) {
            printf("%d ", request[i]);
            if (i < pos - 1)
                total += abs(request[i + 1] - request[i]);
        }
        total += abs(request[pos - 1]);
    } else {
        for (int i = pos; i >= 0; i--) {
            printf("%d ", request[i]);
            if (i < pos)
                total += abs(request[i + 1] - request[i]);
        }
        total += abs(request[0]);
        for (int i = pos + 1; i < n; i++) {
            printf("%d ", request[i]);
            if (i > pos + 1)
                total += abs(request[i] - request[i - 1]);
        }
    }

    printf("\nTotal Head Movement: %d\n", total);
    return 0;
}
